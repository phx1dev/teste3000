#!/usr/bin/env python3
"""
Bot do Discord para monitoramento de badges e presen√ßa do Roblox
Adaptado do sistema webhook original para funcionar como bot Discord com slash commands
"""

import os
import sys
import threading
import time
from discord_bot import run_bot
from keep_alive import keep_alive

def main():
    """Fun√ß√£o principal para executar o bot"""
    
    print("ü§ñ Iniciando Bot Discord - Monitor Roblox")
    print("=" * 50)
    
    # 1. Iniciar keep-alive em thread separada primeiro
    print("üåê Iniciando servidor Flask (keep-alive)...")
    keep_alive_thread = threading.Thread(target=keep_alive, daemon=True, name="KeepAlive")
    keep_alive_thread.start()
    
    # Aguardar um pouco para o Flask iniciar completamente
    time.sleep(5)
    print("‚úÖ Servidor Flask iniciado")
    
    # 2. Verificar se o token do bot est√° configurado
    bot_token = os.getenv('BOT_TOKEN') or os.getenv('DISCORD_BOT_TOKEN')
    if not bot_token:
        print("‚ùå ERRO: Token do bot n√£o configurado!")
        print("üìù Configure a vari√°vel de ambiente BOT_TOKEN (Railway) ou DISCORD_BOT_TOKEN")
        print("üí° Exemplo: BOT_TOKEN='seu_token_aqui' (Railway)")
        print("üîó Obtenha seu token em: https://discord.com/developers/applications")
        # N√£o retornar False - deixar o servidor Flask rodando para health checks
        print("‚ö†Ô∏è  Mantendo servidor Flask ativo para health checks...")
        # Manter o processo vivo para o Railway
        while True:
            time.sleep(60)
    
    print("‚úÖ Token do bot encontrado")
    print("üöÄ Iniciando bot Discord...")
    
    try:
        # 3. Executar o bot (isso bloqueia a thread principal)
        run_bot(bot_token)
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  Bot interrompido pelo usu√°rio")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro fatal: {e}")
        # N√£o retornar False - deixar o servidor Flask rodando
        print("‚ö†Ô∏è  Mantendo servidor Flask ativo ap√≥s erro do bot...")
        while True:
            time.sleep(60)

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)